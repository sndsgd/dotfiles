# ~/.bash_prompt: set the prompt variables here


# reset="\[\e[0m\]"
# COLOR_RESET="\[\e[0m\]"
# COLOR_DIM="\[\e[2m\]"
# # black="\e[1;30m"
# # blue="\e[1;34m"
# #lightcyan="\[\e[36m\]"
# cyan="\e[1;36m"
# lightgreen="\[\e[32m\]"
# # green="\[\e[1;32m\]"
# orange="\e[1;33m"
# # purple="\e[1;35m"
# red="\e[1;31m"
# # violet="\e[1;35m"
# white="\[\e[1;37m\]"
# yellow="\e[33m"



prompt_get_git_branch() {
   if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then

      # Get the short symbolic ref.
      # If HEAD isn’t a symbolic ref, get the short SHA for the latest commit
      local BRANCH_NAME="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
         git rev-parse --short HEAD 2> /dev/null)"

      echo -e "${BRANCH_NAME}"
   fi
}


if [[ "${TERM}"] != "linux" ]]; then
   PS1="\[\033]0;\h\007\]" # set terminal title
else
   PS1=""
fi

# hostname
[ "$OS_NAME" == "Darwin" ] && PS1+="\[\e[1;30;46m\] " || PS1+="\[\e[1;30;42m\] "
PS1+="\h \[\e[0m\] "

# working directory and newline
PS1+="\[\e[2m\]\w\n\[\e[0m\]"

# git branch
[ "$OS_NAME" == "Darwin" ] && PS1+="\[\e[92m\]" || PS1+="\[\e[4;39m\]"
PS1+="\$(prompt_get_git_branch)"

# prompt
PS1+="\[\e[0m\] \\$ "
export PS1

# PS2
PS2="\[\e[0m\]↳ "
export PS2
